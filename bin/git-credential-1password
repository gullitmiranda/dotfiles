#!/bin/bash

# Substitua isso pelo nome do item do 1Password que cont√©m o token de acesso pessoal
# https://developer.1password.com/docs/cli/secret-references
secret_reference=$1

GIT_CREDENTIAL_1PASSWORD_LOG_FILE=${GIT_CREDENTIAL_1PASSWORD_LOG_FILE:-"$HOME/.git-credential-1password.log"}

USAGE_STRING=$(
  cat <<EOF
Usage:
  To use this script, you need to configure git to use it as a credential helper.
  If yout want to use it directly, you can run it with the following command:
    echo -e "protocol=https\nhost=github.com" | git-credential-1password <secret_reference> get

Setup:
  Examples of how to configure git to use this script:
    git config --global credential.useHttpPath true
    git config --global credential.helper '1password "op://Personal/GitHub PAT/password"'

  Expected .gitconfig settings:
    [credential]
      helper = 1password "op://Personal/GitHub PAT/password"
      useHttpPath = true

Requirements:
  This script requires the 1Password CLI to be installed and configured.
  More info: https://support.1password.com/command-line-getting-started/

Debugging:
  When GIT_TRACE=1, the script will log debug information into GIT_CREDENTIAL_1PASSWORD_LOG_FILE="${GIT_CREDENTIAL_1PASSWORD_LOG_FILE}".

  Example:
    echo -e "protocol=https\nhost=github.com" | GIT_TRACE=1 git-credential-1password "op://Personal/GitHub PAT/password" get

EOF
)

if ! command -v op &>/dev/null; then
  echo "1Password CLI could not be found"
  echo "Please install it following the instructions at https://support.1password.com/command-line-getting-started/"
  exit 1
fi

# print debug information into ~/.git-credential-1password.log if GIT_TRACE=1
log_debug() {
  if [ "$GIT_TRACE" = "1" ]; then
    echo -e "$1" >>"$GIT_CREDENTIAL_1PASSWORD_LOG_FILE"
  fi
}

log_debug "==> $ git-credential-1password \"$secret_reference\" get"

# loop and log each argument
log_debug "\tARGS: ${@}"

# read the input from the pipe and check if the protocol is HTTPS
is_https() {

  read -r line
  log_debug "\tPipeline input:$line"

  if [[ "$line" == *"protocol=https"* ]]; then
    return 0
  fi

  return 1
}

if [ "$2" = "get" ]; then
  if is_https; then
    log_debug "  Protocol is HTTPS"

    token_or_error=$(op read "$secret_reference" 2>&1)
    status_code=$?
    # return error if the secret is not found
    if [ $status_code -ne 0 ]; then
      echo -e "Failed to retrieve the secret from 1Password using the reference: \"$secret_reference\"."
      echo -e "Please ensure the item and field names are correct in the secret reference."
      echo -e "Detailed error: $token_or_error"

      exit $status_code
    fi

    echo "username=oauth2"
    echo "password=$token_or_error"
  fi
else
  echo "$USAGE_STRING"
fi
