#!/bin/bash

# Substitua isso pelo nome do item do 1Password que contÃ©m o token de acesso pessoal
# https://developer.1password.com/docs/cli/secret-references
secret_reference=$1
# secret_reference="op://Personal/GitHub PAT git-credential-1password/password"

# Example of how to test this script
# echo -e "protocol=https\nhost=github.com" | git-credential-1password "op://Personal/GitHub PAT git-credential-1password/password" get
# echo -e "protocol=https\nhost=github.com" | git-credential-1password "op://Personal/GitHub PAT git-credential-1password/token" get

# Example of how to configure git to use this script
# git config --global credential.helper "git-credential-1password \"op://Personal/GitHub PAT git-credential-1password/password\""
# git config --global credential.useHttpPath true
# --
# # expected .gitconfig
# [credential]
#   helper = git-credential-1password "op://Personal/GitHub PAT git-credential-1password/password"
#   useHttpPath = true

# This script requires the 1Password CLI to be installed and configured
# https://support.1password.com/command-line-getting-started/

if ! command -v op &> /dev/null
then
    echo "1Password CLI could not be found"
    echo "Please install it following the instructions at https://support.1password.com/command-line-getting-started/"
    exit 1
fi

if [ "$2" = "get" ]; then
  read -r line
  IFS='=' read -ra kv <<< "$line"

  if [ "${kv[0]}" = "protocol" ] && [ "${kv[1]}" = "https" ]; then
    read -r line
    IFS='=' read -ra kv <<< "$line"

    # if [ "${kv[0]}" = "host" ] && [ "${kv[1]}" = "github.com" ]; then
      token=$(op read "$secret_reference")

      printf "kv[0]=%s\n" "${kv[0]}" >&2
      printf "kv[1]=%s\n" "${kv[1]}" >&2

      echo "username=oauth2"
      echo "password=$token"
    # fi
  fi
fi
